version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.22
  aws-eks: circleci/aws-eks@2.1.2
  kubernetes: circleci/kubernetes@0.4.0
  slack: circleci/slack@4.4.2 # ref: https://github.com/CircleCI-Public/slack-orb, https://circleci.com/developer/orbs/orb/circleci/slack#usage-examples

jobs:
  test:
    docker:
      - image: circleci/node:14.15.0
    steps:
      - checkout
      - restore_cache: # ref: https://circleci.com/docs/2.0/caching/#restoring-cache
          keys:
            # Find a cache corresponding to this specific package-lock.json checksum
            # when this file is changed, this key will fail
            - v1-npm-deps-{{ checksum "package-lock.json" }}
            # Find the most recently generated cache used from any branch
            - v1-npm-deps-

      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}

      - run: npm ci

      - save_cache:
          key: v1-npm-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules

      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run: npm run lint

      # - run:
      #     name: Jest Tests
      #     command: npm run test

  build-and-push-image:
    executor: aws-cli/default
    parameters:
      reg:
        type: string
        default: "248606629437.dkr.ecr.us-west-2.amazonaws.com"
      repo:
        type: string
        default: id-verification-demo-client
      env:
        type: string
        default: "development"
      image_tag_1: 
        type: string
      image_tag_2:
        type: string
      issuer_server_url:
        type: string
      verifier_server_url:
        type: string
      prove_issuer_did:
        type: string
      hv_issuer_did:
        type: string
      log_rocket_id:
        type: string
      holder_app_uuid:
        type: string
      backend_server_url:
        type: string
      prove_auth_url:
        type: string
      deeplink_server_url:
        type: string
      prove_enabled:
        type: string

    steps:
      - checkout
      - aws-cli/setup
      - setup_remote_docker:
          version: 19.03.13
      - add_ssh_keys:
          fingerprints:
            - "ae:c4:5c:af:ef:ea:57:12:99:a3:bb:aa:09:e0:57:14"
      - run:
          command: |
            echo Logging in to Amazon ECR...
            echo << parameters.deeplink_server_url >>
            $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
            echo Building the Docker image...
            DOCKER_BUILDKIT=1 docker build --ssh github="$HOME/.ssh/id_rsa" \
            --build-arg API_KEY=${DEV_API_KEY} \
            --build-arg ISSUER_SERVER_URL=<< parameters.issuer_server_url >> \
            --build-arg ENV=<< parameters.env >> \
            --build-arg VERIFIER_SERVER_URL=<< parameters.verifier_server_url >> \
            --build-arg PROVE_ISSUER_DID=<< parameters.prove_issuer_did >> \
            --build-arg HV_ISSUER_DID=<< parameters.hv_issuer_did >> \
            --build-arg LOG_ROCKET_ID=<< parameters.log_rocket_id >> \
            --build-arg HOLDER_APP_UUID=<< parameters.holder_app_uuid >> \
            --build-arg BACKEND_SERVER_URL=<< parameters.backend_server_url >> \
            --build-arg PROVE_AUTH_URL=<< parameters.prove_auth_url >> \
            --build-arg DEEPLINK_SERVER_URL=<< parameters.deeplink_server_url >> \
            --build-arg PROVE_ENABLED=<< parameters.prove_enabled >> \
            -t ${CIRCLE_SHA1} .

            docker tag ${CIRCLE_SHA1} << parameters.reg >>/<< parameters.repo >>:<< parameters.image_tag_1 >>
            docker tag ${CIRCLE_SHA1} << parameters.reg >>/<< parameters.repo >>:<< parameters.image_tag_2 >>
            echo Pushing the Docker image...
            docker push << parameters.reg >>/<< parameters.repo >>:<< parameters.image_tag_1 >>
            docker push << parameters.reg >>/<< parameters.repo >>:<< parameters.image_tag_2 >>
          name: Update container image

  deploy-image:
    docker: # Referencing the python image here, see https://github.com/CircleCI-Public/aws-eks-orb/issues/52#issuecomment-1006838213
    - image: cimg/python:3.10
    parameters:
      cluster-name:
        type: string
        default: "dev-customer-cluster"
      namespace:
        type: string
        default: default
      repo:
        type: string
        default: id-verification-demo-client
      deployment:
        type: string
        default: id-verification-demo-client
      image_tag:
        type: string
      slack_template:
        type: string
        default: basic_success_1

    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          install-kubectl: true
          aws-region: ${AWS_REGION}
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            # Set the image tag then ensure a rollout is triggered. Thanks to the deployment pod spec being set to always pull this should grab the latest image, even with the same tag.
            # ref: https://stackoverflow.com/a/55914480/2631728
            kubectl set image deployment/<< parameters.deployment >> << parameters.deployment >>=${AWS_ECR_URL}/<< parameters.repo >>:<< parameters.image_tag >> -n << parameters.namespace >>
            kubectl rollout restart deploy << parameters.deployment >> -n << parameters.namespace >>

            # Check deployment rollout status every 10 seconds (max 10 minutes) until complete.
            # ref: https://www.jeffgeerling.com/blog/2018/updating-kubernetes-deployment-and-waiting-it-roll-out-shell-script
            ATTEMPTS=0
            ROLLOUT_STATUS_CMD="kubectl rollout status deployment/<< parameters.deployment >> -n << parameters.namespace >>"
            until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
              $ROLLOUT_STATUS_CMD
              ATTEMPTS=$((attempts + 1))
              sleep 10
            done
          name: Deploy container image
      - slack/notify:
          event: fail
          mentions: '@devops-team'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: << parameters.slack_template >>

workflows:
  test:
    jobs:
      - test:
          filters:
            branches:
              ignore:
                - main
                - test-circleci
                - sandbox

  build-and-deploy-release:
    jobs:
      - test:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      # Unum Holder; HV + Prove
      - build-and-push-image:
          name: "build-and-push-id-verification-demo-sandbox-hv-prove"
          requires:
            - test
          context: AWS-Dev
          prove_enabled: "true"
          image_tag_1: sandbox-latest
          image_tag_2: "sandbox-${CIRCLE_TAG}"
          holder_app_uuid: b8820ef7-8ae8-4fa9-9a99-84629b2ea147
          issuer_server_url: https://unum-issuer-api.demo.dev-unumid.co
          verifier_server_url: https://acme-verifier-api.demo.unumid.co
          prove_issuer_did: did:unum:6ace7dcd-75b7-416a-8604-66535387e51d
          hv_issuer_did: did:unum:1b145bc6-d9ed-49bc-9e8b-6a23cc559270
          log_rocket_id: vm6x8i/id-verification-demo-sandbox
          backend_server_url: https://id-verification-api.demo.unumid.co
          prove_auth_url: https://device.staging.payfone.com
          deeplink_server_url: https://link.sandbox-unumid.co
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - deploy-image:
          name: "deploy-id-verification-demo-sandbox-hv-prove"
          cluster-name: sandbox-customer-cluster
          namespace: demos
          context: 
            - AWS-Dev
            - Slack-Context
          requires:
            - build-and-push-id-verification-demo-sandbox-hv-prove
          image_tag: sandbox-"${CIRCLE_TAG}"
          slack_template: success_tagged_deploy_1
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      # Unum Holder; just HV
      - build-and-push-image:
          name: "build-and-push-id-verification-demo-sandbox-hv"
          requires:
            - test
          context: AWS-Dev
          prove_enabled: "false"
          image_tag_1: sandbox-latest-hv
          image_tag_2: "sandbox-${CIRCLE_TAG}-hv"
          holder_app_uuid: b8820ef7-8ae8-4fa9-9a99-84629b2ea147
          issuer_server_url: https://unum-issuer-api.demo.dev-unumid.co
          verifier_server_url: https://acme-verifier-api.demo.unumid.co
          prove_issuer_did: did:unum:6ace7dcd-75b7-416a-8604-66535387e51d
          hv_issuer_did: did:unum:1b145bc6-d9ed-49bc-9e8b-6a23cc559270
          log_rocket_id: vm6x8i/id-verification-demo-client-sandbox
          backend_server_url: https://id-verification-api.demo.unumid.co
          prove_auth_url: https://device.staging.payfone.com
          deeplink_server_url: https://link.sandbox-unumid.co
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

      - deploy-image:
          name: "deploy-id-verification-demo-sandbox-hv"
          cluster-name: sandbox-customer-cluster
          namespace: demos
          context: 
            - AWS-Dev
            - Slack-Context
          requires:
            - build-and-push-id-verification-demo-sandbox-hv
          deployment: id-verification-demo-client-hv
          image_tag: sandbox-"${CIRCLE_TAG}-hv"
          slack_template: success_tagged_deploy_1
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

  build-and-deploy:
    jobs:
      - test:
          filters:
            branches:
              only:
                - main
      
      # Unum Holder; HV + Prove
      - build-and-push-image:
          name: "build-and-push-id-verification-demo-hv-prove"
          requires:
            - test
          context: AWS-Dev
          prove_enabled: "true"
          image_tag_1: dev-latest
          image_tag_2: "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}"
          holder_app_uuid: 86810c13-47b4-4a2b-ae46-fb13b6a5177a
          issuer_server_url: https://unum-issuer-api.demo.dev-unumid.co
          verifier_server_url: https://acme-verifier-api.demo.dev-unumid.co
          prove_issuer_did: did:unum:f627cae9-fcd8-4776-a921-86605630f6da
          hv_issuer_did: did:unum:f6f248f9-8c02-4b05-a9ee-4bcd67c09d57
          log_rocket_id: vm6x8i/id-verification-demo-dev
          backend_server_url: https://id-verification-api.demo.dev-unumid.co
          prove_auth_url: http://device.staging.payfone.com
          deeplink_server_url: https://link.dev-unumid.co
          filters:
            branches:
              only:
                - main

      - deploy-image:
          name: "deploy-id-verification-demo-hv-prove"
          context: 
            - AWS-Dev
            - Slack-Context
          requires:
            - build-and-push-id-verification-demo-hv-prove
          image_tag: dev-latest
          filters:
            branches:
              only:
                - main

      # Unum Holder; just HV
      - build-and-push-image:
          name: "build-and-push-id-verification-demo-hv"
          requires:
            - test
          context: AWS-Dev
          prove_enabled: "false"
          image_tag_1: dev-latest-hv
          image_tag_2: "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}-hv"
          holder_app_uuid: 86810c13-47b4-4a2b-ae46-fb13b6a5177a
          issuer_server_url: https://unum-issuer-api.demo.dev-unumid.co
          verifier_server_url: https://acme-verifier-api.demo.dev-unumid.co
          prove_issuer_did: did:unum:f627cae9-fcd8-4776-a921-86605630f6da
          hv_issuer_did: did:unum:f6f248f9-8c02-4b05-a9ee-4bcd67c09d57
          log_rocket_id: vm6x8i/id-verification-demo-dev
          backend_server_url: https://id-verification-api.demo.dev-unumid.co
          prove_auth_url: http://device.staging.payfone.com
          deeplink_server_url: https://link.dev-unumid.co
          filters:
            branches:
              only:
                - main

      - deploy-image:
          name: "deploy-id-verification-demo-hv"
          context: 
            - AWS-Dev
            - Slack-Context
          requires:
            - build-and-push-id-verification-demo-hv
          deployment: id-verification-demo-client-hv
          image_tag: dev-latest-hv
          filters:
            branches:
              only:
                - main

  build-and-deploy-test:
    jobs:
      - test:
          filters:
            branches:
              only:
                - test-circleci

      # Unum Holder; HV + Prove
      - build-and-push-image:
          name: "build-and-push-id-verification-demo-test-hv-prove"
          requires:
            - test
          context: AWS-Dev
          prove_enabled: "true"
          image_tag_1: test-latest
          image_tag_2: "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}"
          holder_app_uuid: 86810c13-47b4-4a2b-ae46-fb13b6a5177a
          issuer_server_url: https://unum-issuer-api.demo.dev-unumid.co
          verifier_server_url: https://acme-verifier-api.demo.dev-unumid.co
          prove_issuer_did: did:unum:f627cae9-fcd8-4776-a921-86605630f6da
          hv_issuer_did: did:unum:f6f248f9-8c02-4b05-a9ee-4bcd67c09d57
          log_rocket_id: vm6x8i/id-verification-demo-dev
          backend_server_url: https://id-verification-api.demo.dev-unumid.co
          prove_auth_url: http://device.staging.payfone.com
          deeplink_server_url: https://link.dev-unumid.co
          filters:
            branches:
              only:
                - test-circleci
      - deploy-image:
          name: "deploy-id-verification-demo-test-hv-prove"
          context: 
            - AWS-Dev
            - Slack-Context
          requires:
            - build-and-push-id-verification-demo-test-hv-prove
          image_tag: test-latest
          filters:
            branches:
              only:
                - test-circleci

      # Unum Holder; just HV
      - build-and-push-image:
          name: "build-and-push-id-verification-demo-test-hv"
          requires:
            - test
          context: AWS-Dev
          prove_enabled: "false"
          image_tag_1: test-latest-hv
          image_tag_2: "${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}-hv"
          holder_app_uuid: 86810c13-47b4-4a2b-ae46-fb13b6a5177a
          issuer_server_url: https://unum-issuer-api.demo.dev-unumid.co
          verifier_server_url: https://acme-verifier-api.demo.dev-unumid.co
          prove_issuer_did: did:unum:f627cae9-fcd8-4776-a921-86605630f6da
          hv_issuer_did: did:unum:f6f248f9-8c02-4b05-a9ee-4bcd67c09d57
          log_rocket_id: vm6x8i/id-verification-demo-dev
          backend_server_url: https://id-verification-api.demo.dev-unumid.co
          prove_auth_url: http://device.staging.payfone.com
          deeplink_server_url: https://link.dev-unumid.co
          filters:
            branches:
              only:
                - test-circleci
      - deploy-image:
          name: "deploy-id-verification-demo-test-hv"
          context: 
            - AWS-Dev
            - Slack-Context
          requires:
            - build-and-push-id-verification-demo-test-hv
          deployment: id-verification-demo-client-hv
          image_tag: test-latest-hv
          filters:
            branches:
              only:
                - test-circleci
